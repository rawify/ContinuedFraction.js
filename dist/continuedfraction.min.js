/*
ContinuedFraction.js v0.0.1 4/18/2025
https://github.com/rawify/ContinuedFraction.js

Copyright (c) 2025, Robert Eisele (https://raw.org/)
Licensed under the MIT license.
*/
'use strict';(function(n){const e={sqrt:function*(a){const c=Math.floor(Math.sqrt(a));yield c;if(c*c!==a){var b=0,d=1,f=c;do b=f*d-b,d=(a-b*b)/d,f=Math.floor((c+b)/d),yield f;while(1)}},fromNumber:function*(a){yield*Fraction(a).toContinued()},fromFraction:function*(a,c){yield*Fraction(a,c).toContinued()},PHI:function*(){for(;;)yield 1},FOUR_OVER_PI:function*(){yield{a:1,b:0};for(let a=0;;a++)yield{a:2,b:(2*a+1)**2}},PI:function*(){yield{a:3,b:0};for(let a=1;;a++)yield{a:6,b:(2*a-1)**2}},E:function*(){yield 2;
for(let a=1;;a++)yield 1,yield 2*a,yield 1},eval:function(a,c=10){"function"===typeof a&&(a=a());var b=a.next();if(b.done)return Fraction(0);b=Fraction(b.value.a??b.value);let d=Fraction(1),f=Fraction(1),h=Fraction(0);for(let k=1;k<c;k++){const {value:g,done:p}=a.next();if(p)break;const l=Fraction(g.a??g),m=Fraction(g.b??1);[f,b]=[b,l.mul(b).add(m.mul(f))];[h,d]=[d,l.mul(d).add(m.mul(h))]}return b.div(d)}};"function"===typeof define&&define.amd?define([],function(){return e}):"object"===typeof exports?
(Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=e,e.ContinuedFraction=e,module.exports=e):n.ContinuedFraction=e})(this);
